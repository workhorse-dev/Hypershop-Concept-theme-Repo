<style>
  .switcher {
    z-index: 10;
  }
  .goog-te-banner-frame.skiptranslate,
  .skiptranslate,
  #goog-gt-tt,
  .goog-te-balloon-frame,
  .goog-te-menu-frame,
  .goog-te-gadget-icon,
  .goog-te-combo {
    display: none !important;
  }
  body {
    top: 0 !important;
  }
  .custom-lang-switcher {
    position: relative;
    display: inline-block;
    font-family: sans-serif;
  }

  #lang-toggle {
    background: transparent;
    padding: 6px 10px;
    font-size: inherit;
    font-family: inherit;
    display: flex;
    align-items: center;
    gap: 6px;
    cursor: pointer;
  }

  #lang-toggle .arrow {
    margin-left: auto;
    font-size: 10px;
  }

  .lang-options {
    position: absolute;
    scrollbar-width: none;
    z-index: 1000;
    background: #1f1f1f;
    margin-top: 4px;
    padding: 4px 0;
    list-style: none;
    padding: 1rem;
    max-height: 200px;
    overflow-y: auto;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .lang-options li {
    padding: 8px 12px;
    display: flex;
    align-items: center;
    border-radius: 10rem;
    gap: 6px;
    cursor: pointer;
    transition: background 0.2s;
  }

  .lang-options li:hover {
    background: #fff;
    color: black;
  }

  .lang-options img {
    width: 30px;
    height: 30px;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(-10px);
    }
  }

  .fade-in {
    animation: fadeIn 0.3s ease forwards;
  }

  .fade-out {
    animation: fadeOut 0.3s ease forwards;
  }
</style>
<div class="custom-lang-switcher notranslate dropdown">
  <button id="lang-toggle" aria-haspopup="true" aria-expanded="false">
    <img src="//cdn.gtranslate.net/shopify/assets/flags/32/en.png" alt="en" width="30" height="30">
    <span id="selected-lang-name">English</span>
    <span class="arrow">â–¼</span>
  </button>
  <ul id="lang-dropdown" class="lang-options notranslate dropdown-content" hidden>
    {%- assign languages = '
    af:Afrikaans, sq:Albanian, am:Amharic, ar:Arabic, hy:Armenian, az:Azerbaijani,
    eu:Basque, be:Belarusian, bn:Bengali, bs:Bosnian, bg:Bulgarian, ca:Catalan,
    ceb:Cebuano, ny:Chichewa, zh-CN:Chinese (Simplified), zh-TW:Chinese (Traditional),
    co:Corsican, hr:Croatian, cs:Czech, da:Danish, nl:Dutch, en:English, eo:Esperanto,
    et:Estonian, tl:Filipino, fi:Finnish, fr:French, fy:Frisian, gl:Galician, ka:Georgian,
    de:German, el:Greek, gu:Gujarati, ht:Haitian Creole, ha:Hausa, haw:Hawaiian,
    iw:Hebrew, hi:Hindi, hmn:Hmong, hu:Hungarian, is:Icelandic, ig:Igbo, id:Indonesian,
    ga:Irish, it:Italian, ja:Japanese, jw:Javanese, kn:Kannada, kk:Kazakh, km:Khmer,
    ko:Korean, ku:Kurdish (Kurmanji), ky:Kyrgyz, lo:Lao, la:Latin, lv:Latvian, lt:Lithuanian,
    lb:Luxembourgish, mk:Macedonian, mg:Malagasy, ms:Malay, ml:Malayalam, mt:Maltese,
    mi:Maori, mr:Marathi, mn:Mongolian, my:Myanmar (Burmese), ne:Nepali, no:Norwegian,
    ps:Pashto, fa:Persian, pl:Polish, pt:Portuguese, pa:Punjabi, ro:Romanian, ru:Russian,
    sm:Samoan, gd:Scots Gaelic, sr:Serbian, st:Sesotho, sn:Shona, sd:Sindhi, si:Sinhala,
    sk:Slovak, sl:Slovenian, so:Somali, es:Spanish, su:Sundanese, sw:Swahili, sv:Swedish,
    tg:Tajik, ta:Tamil, te:Telugu, th:Thai, tr:Turkish, uk:Ukrainian, ur:Urdu, uz:Uzbek,
    vi:Vietnamese, cy:Welsh, xh:Xhosa, yi:Yiddish, yo:Yoruba, zu:Zulu
  '
      | split: ','
    -%}

    {%- for item in languages -%}
      {%- assign parts = item | strip | split: ':' -%}
      {%- assign code = parts[0] -%}
      {%- assign name = parts[1] -%}
      <li data-lang="{{ code }}" data-name="{{ name }}" class="notranslate">{{ name }}</li>
    {%- endfor -%}
  </ul>
</div>

<script>
  function GTranslateFireEvent(element, eventName) {
    const event = new Event(eventName, {
      bubbles: true,
    });
    element.dispatchEvent(event);
  }

  function doGTranslate(lang_pair) {
    if (!lang_pair) return;
    const lang = lang_pair.split('|')[1];
    const combo = document.querySelector('.goog-te-combo');

    if (!combo) {
      setTimeout(() => doGTranslate(lang_pair), 500);
      return;
    }

    combo.value = lang;
    GTranslateFireEvent(combo, 'change');
    GTranslateFireEvent(combo, 'change');
  }

  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.getElementById('lang-toggle');
    const dropdown = document.getElementById('lang-dropdown');
    const selectedName = document.getElementById('selected-lang-name');
    const toggleFlag = toggle.querySelector('img');

    // Function to dynamically generate flag image URL
    const getFlagUrl = (langCode) => {
      const normalized = langCode === 'zh-CN' ? 'zh-CN' : langCode;
      return `//cdn.gtranslate.net/flags/16/${normalized}.png`;
    };

    // Toggle dropdown open/close with animation
    toggle.addEventListener('click', () => {
      const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
      toggle.setAttribute('aria-expanded', String(!isExpanded));

      if (isExpanded) {
        dropdown.classList.remove('fade-in');
        dropdown.classList.add('fade-out');

        dropdown.addEventListener('animationend', function handleFadeOut() {
          dropdown.hidden = true;
          dropdown.classList.remove('fade-out');
          dropdown.removeEventListener('animationend', handleFadeOut);
        });
      } else {
        dropdown.hidden = false;
        dropdown.classList.remove('fade-out');
        dropdown.classList.add('fade-in');
      }
    });

    // Language option selection
    dropdown.querySelectorAll('li').forEach((li) => {
      li.addEventListener('click', () => {
        const langCode = li.getAttribute('data-lang');
        const langName = li.getAttribute('data-name');

        doGTranslate(`en|${langCode}`);
        selectedName.innerText = langName;
        toggleFlag.setAttribute('src', getFlagUrl(langCode));

        toggle.setAttribute('aria-expanded', 'false');
        dropdown.hidden = true;
      });
    });

    // Initialize selected language from cookie
    const match = document.cookie.match('(^|;) ?googtrans=([^;]*)(;|$)');
    if (match) {
      const lang = match[2].split('/')[2];
      const current = dropdown.querySelector(`[data-lang="${lang}"]`);
      if (current) {
        selectedName.innerText = current.getAttribute('data-name');
        toggleFlag.setAttribute('src', getFlagUrl(lang));
      }
    }

    // Close dropdown if clicked outside
    document.addEventListener('click', (e) => {
      if (!e.target.closest('.custom-lang-switcher')) {
        dropdown.hidden = true;
        toggle.setAttribute('aria-expanded', 'false');
      }
    });
  });
</script>

<div id="google_translate_element2"></div>
<script>
  function googleTranslateElementInit2() {
    new google.translate.TranslateElement({ pageLanguage: 'en', autoDisplay: false }, 'google_translate_element2');
  }
</script>
<script defer src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit2"></script>
